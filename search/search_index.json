{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is backinvader command-line tool? backinvader ( bi ) command-line interface is CLI tool to use backtrader framework. bi command allows the user to: create and manage Data Bundles / Data Feed run backtest or live strategy from command-line or config file Command Groups Command Groups Description bi bundles List all of available data bundles / data feeed bi bundle Show bundle information bi register Register new bundle (data feed) for future run bi unregister Unregister bundle bi ingest For Downloading data into local bi clean Remove data from ingest command bi run Run strategy","title":"Overview"},{"location":"#what-is-backinvader-command-line-tool","text":"backinvader ( bi ) command-line interface is CLI tool to use backtrader framework. bi command allows the user to: create and manage Data Bundles / Data Feed run backtest or live strategy from command-line or config file","title":"What is backinvader command-line tool?"},{"location":"#command-groups","text":"Command Groups Description bi bundles List all of available data bundles / data feeed bi bundle Show bundle information bi register Register new bundle (data feed) for future run bi unregister Unregister bundle bi ingest For Downloading data into local bi clean Remove data from ingest command bi run Run strategy","title":"Command Groups"},{"location":"bundle/","text":"Data bundle is data source to use in strategy. Data bundle can be: Local file Data source that use API to fetch data Add new data bundle To install data bundle, run bi register command. bi register [--format FORMAT] [--parameter kwargs] name Command Flag Description NAME bundle name -f, --format FORMAT Data Format or Data Feed Class -p, --parameter kwargs Parameter for Data bundle FORMAT: Available Data Format from backtrader btcsv generic influxdb mt4csv quandl sierracsv vchartcsv vcfile yahoo yahoocsv yahoocsv_unreversed Data Feed Class can be specified with the following form: module.classname module.submodule.classname Parameter: each data format need parameters. Some backtrader data feed class must pass dataname parameter to provide location of file. The argument can be specified with key=value . For multiple parameters use -p key1=val1 -p key2=val2 Example $>bi register -f yahoocsv -p dataname=\"backinvader-example/data/orcl-1995-2014.txt\" orcl19952014 Listing Data bundles To see a list of data bundles that are available after registered, run bi bundles $>bi bundles SP500-2010-2020 EURUSD-1980-2015 Data bundle information Use bi bundle to show information about data bundle. $>bi bundle NAME Remove data bundle Use bi unregister command to remove specified data bundle $>bi unregister NAME","title":"Manage Data Bundle"},{"location":"bundle/#add-new-data-bundle","text":"To install data bundle, run bi register command. bi register [--format FORMAT] [--parameter kwargs] name Command Flag Description NAME bundle name -f, --format FORMAT Data Format or Data Feed Class -p, --parameter kwargs Parameter for Data bundle FORMAT: Available Data Format from backtrader btcsv generic influxdb mt4csv quandl sierracsv vchartcsv vcfile yahoo yahoocsv yahoocsv_unreversed Data Feed Class can be specified with the following form: module.classname module.submodule.classname Parameter: each data format need parameters. Some backtrader data feed class must pass dataname parameter to provide location of file. The argument can be specified with key=value . For multiple parameters use -p key1=val1 -p key2=val2","title":"Add new data bundle"},{"location":"bundle/#example","text":"$>bi register -f yahoocsv -p dataname=\"backinvader-example/data/orcl-1995-2014.txt\" orcl19952014","title":"Example"},{"location":"bundle/#listing-data-bundles","text":"To see a list of data bundles that are available after registered, run bi bundles $>bi bundles SP500-2010-2020 EURUSD-1980-2015","title":"Listing Data bundles"},{"location":"bundle/#data-bundle-information","text":"Use bi bundle to show information about data bundle. $>bi bundle NAME","title":"Data bundle information"},{"location":"bundle/#remove-data-bundle","text":"Use bi unregister command to remove specified data bundle $>bi unregister NAME","title":"Remove data bundle"},{"location":"run/","text":"You can run strategy using bi run pass parameter from command-line using configuration file Command Flag Description -c, --config CONFIG using CONFIG file to run --data name:kwargs, -d name:kwargs using GenericCSVData to add data --bundle name:kwargs using data bundle to add data --cerebro kwargs, -ce kwargs pass cerebro options --strategy module:name:kwargs, -st module:name:kwargs using strategy --analyzer module:name:kwargs, -an module:name:kwargs using analyzer --observer module:name:kwargs, -ob module:name:kwargs using observer --nostdstats Disable the standard statistics observers --cash CASH Cash to set to the broker --commission COMMISSION COMMISSION value to set --margin MARGIN MARGIN value to set --mult MULT Multiplier to use --interest INTEREST Credit Interest rate to apply (0.0x) --interest_long Apply credit interest to long positions --slip_perc SLIP_PERC Enable slippage with percentage value --slip_fixed SLIP_FIXED Enable slippage with a fixed point value --slip_open enable slippage for when matching opening prices --no-slip_match Disable slip_match, ie: matching capped at high-low if slippage goes over those limits --slip_out with slip_match enabled, match outside high-low --plot [kwargs] apply parameter for plotting Pass Parameter from command-line Adding data source Using --data Data to be added to the system using GenericCSVData. This option can be specified multiple times. The argument can be specified with the following form filename:kwargs kwargs is optional.The available kwargs to bundle are: fromdate todate timeframe compression resample replay filter Example -d /path/to/filename.csv:a=1,b=2 Using --bundle Data Bundle to be added to the system. This option can be specified multiple times. The argument can be specified with the following form bundlename:kwargs kwargs is optional.The available kwargs to bundle are: fromdate todate timeframe compression resample replay filter timeframe, resample and replay argument can be specified as [ticks, microseconds, seconds, minutes, days, weeks, months, years] and [T, MS, S, M, D, W, MN, Y] with integer. For example, M5 is 5 mins Example -b mybundle:a=1,b=2 Cerebro options The passed kwargs will be passed directoly to the cerebro instance created for the execution The available kwargs to cerebro are: preload (default: True) runonce (default: True) maxcpus (default: None) stdstats (default: True) live (default: False) exactbars (default: False) writer (default False) oldbuysell (default False) tradehistory (default False) Example -ce preload=False For multiple kwargs: -ce preload=False -ce maxcpu=1 Adding Strategy Using --strategy or -st to run strategy. This option can be specified multiple times. The argument can be specified with the following form module.classname:kwargs kwargs is optional If module is omitted then class name will be sought in the built-in strategies module. Such as in classname:kwargs or classname module can specified as path to file (must ending with .py) that contain class definition filepath:classname or filepath:classname:kwargs Example -st mymod.myclass:a=1,b=2 -st /strategy/mystrategyfile:MyStrategyClass:a=1,b=2 Adding Analyzer Using --analyzer or -an to add analyzer. This option can be specified multiple times. The argument can be specified with the following form module.classname:kwargs kwargs is optional If module is omitted then class name will be sought in the built-in analyzers module. Such as in classname:kwargs or classname module can specified as path to file (must ending with .py) that contain class definition filepath:classname or filepath:classname:kwargs Example -an SQN -an mymod.myclass:a=1,b=2 -an /analyzer/myanalyzerfile:MyAnalyzerClass:a=1,b=2 Adding Observer Using --observer or -ob to add observer. This option can be specified multiple times. The argument can be specified with the following form module.classname:kwargs kwargs is optional If module is omitted then class name will be sought in the built-in observers module. Such as in classname:kwargs or classname module can specified as path to file (must ending with .py) that contain class definition filepath:classname or filepath:classname:kwargs Example -ob DrawDown -ob mymod.myclass:a=1,b=2 -ob /observer/myobserverfile:MyObserverClass:a=1,b=2 Plotting Apply parameter for plotting style: [bar, line] to plot candlesticks/line plot_mode: [single, tabs] to generate single/tabs page output_dir: directory to write report filename: report name Example --plot style=\"bar\" -p style=\"bar\" -p filename=\"result\" Using configuration file yaml format","title":"Run strategy"},{"location":"run/#pass-parameter-from-command-line","text":"","title":"Pass Parameter from command-line"},{"location":"run/#adding-data-source","text":"","title":"Adding data source"},{"location":"run/#using-data","text":"Data to be added to the system using GenericCSVData. This option can be specified multiple times. The argument can be specified with the following form filename:kwargs kwargs is optional.The available kwargs to bundle are: fromdate todate timeframe compression resample replay filter Example -d /path/to/filename.csv:a=1,b=2","title":"Using --data"},{"location":"run/#using-bundle","text":"Data Bundle to be added to the system. This option can be specified multiple times. The argument can be specified with the following form bundlename:kwargs kwargs is optional.The available kwargs to bundle are: fromdate todate timeframe compression resample replay filter timeframe, resample and replay argument can be specified as [ticks, microseconds, seconds, minutes, days, weeks, months, years] and [T, MS, S, M, D, W, MN, Y] with integer. For example, M5 is 5 mins Example -b mybundle:a=1,b=2","title":"Using --bundle"},{"location":"run/#cerebro-options","text":"The passed kwargs will be passed directoly to the cerebro instance created for the execution The available kwargs to cerebro are: preload (default: True) runonce (default: True) maxcpus (default: None) stdstats (default: True) live (default: False) exactbars (default: False) writer (default False) oldbuysell (default False) tradehistory (default False) Example -ce preload=False For multiple kwargs: -ce preload=False -ce maxcpu=1","title":"Cerebro options"},{"location":"run/#adding-strategy","text":"Using --strategy or -st to run strategy. This option can be specified multiple times. The argument can be specified with the following form module.classname:kwargs kwargs is optional If module is omitted then class name will be sought in the built-in strategies module. Such as in classname:kwargs or classname module can specified as path to file (must ending with .py) that contain class definition filepath:classname or filepath:classname:kwargs Example -st mymod.myclass:a=1,b=2 -st /strategy/mystrategyfile:MyStrategyClass:a=1,b=2","title":"Adding Strategy"},{"location":"run/#adding-analyzer","text":"Using --analyzer or -an to add analyzer. This option can be specified multiple times. The argument can be specified with the following form module.classname:kwargs kwargs is optional If module is omitted then class name will be sought in the built-in analyzers module. Such as in classname:kwargs or classname module can specified as path to file (must ending with .py) that contain class definition filepath:classname or filepath:classname:kwargs Example -an SQN -an mymod.myclass:a=1,b=2 -an /analyzer/myanalyzerfile:MyAnalyzerClass:a=1,b=2","title":"Adding Analyzer"},{"location":"run/#adding-observer","text":"Using --observer or -ob to add observer. This option can be specified multiple times. The argument can be specified with the following form module.classname:kwargs kwargs is optional If module is omitted then class name will be sought in the built-in observers module. Such as in classname:kwargs or classname module can specified as path to file (must ending with .py) that contain class definition filepath:classname or filepath:classname:kwargs Example -ob DrawDown -ob mymod.myclass:a=1,b=2 -ob /observer/myobserverfile:MyObserverClass:a=1,b=2","title":"Adding Observer"},{"location":"run/#plotting","text":"Apply parameter for plotting style: [bar, line] to plot candlesticks/line plot_mode: [single, tabs] to generate single/tabs page output_dir: directory to write report filename: report name Example --plot style=\"bar\" -p style=\"bar\" -p filename=\"result\"","title":"Plotting"},{"location":"run/#using-configuration-file","text":"yaml format","title":"Using configuration file"}]}